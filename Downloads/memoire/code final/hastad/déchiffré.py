#!/usr/bin/env python3
import libnum
from gmpy2 import invert, gcd, iroot

def op(x):
    res = 1
    for i in x:
        res *= i
    return res

def CRT(m, a):
    assert (len(m) == len(a))
    M = op(m)
    sum = 0
    for m, a in zip(m, a):
        Mi = M // m
        ti = invert(Mi, m)
        sum += a * ti * Mi
    return sum % M
def GCRT(m, a):
    assert (len(m) == len(a))
    curm, cura = m[0], a[0]
    for m, a in zip(m[1:], a[1:]):
        d = gcd(curm, m)
        c = a - cura
        assert (c % d == 0)
        K = c // d * invert(curm // d, m // d)
        cura += curm * K
        curm = curm * m // d
    return cura % curm

e= 7
n= [14642571374779380061988283903493373926334768550000305485929097695934801034990187792493161457497692837318815147908772386008446926002577428801016472345041932519050713301743309559291637550703982702419862725836232217980667363472966887555741820842675361567989637067892590043833660560189598656119453188508348563754602859664066342907506947787456336273917968485837233812415804180342456007454655513061298760497581494553856208188910397546633205950996285382236621098278086294454008007353404111353050658393225856977707788050660876294757817387930033484995894713874942605517314414651625151581332617295578844792231257155763899342829, 9505838396090702431556275991850390289638989328315579755856380101648771508855905346001539601173677761726392172225299530491083970665689557802357179735092650247443645963140221223294714193517893671730491847269192537681512140791377794381905125887757192027213162841504506725681106919891299718224465530623267253024538034844949838279857414409894656537073866014251517773878904612803493140721890072562002105676499365448809584511555406890096531139722671743813819422118029463843890510969842797507735259759889390374195023328565541225811081329886083669172821036086859631514051623508126727267110945101400748131376273112621674312193, 13995256969202562789701073206719366029055098057963145137396752960698681854560822141355830243588434185809711725936721603202067931424949820248855616752562699131733506669237003958706830707319843796162408563230266188723035773350093385618482389349710703536575535109419575863349173295820972602226175314882693809130843342435941177087818716668449229593999156834251590960156439435000911629446173688873180134344556223418631045691288642198862635471250711732455868920715044889822164795310895443106847761639086868227396354931332820521776606254467084050602853833343585392774500643136650202833273838972784872696601266458154821916553, 14683315423626178423082878628106603958610913069650101444115822027337491003687992136281168621705560821427775715240624257319758406977850909037622394105177471912276429366158745667150154825204582608115457375030738648967105661338539272029573254391195423837428480445043044853230690516432752670044419851477607908096247356382454065106064953469691610069802374362864382012102210540178194808113038040830568877550591995064962571127502376746532603978922346934224960103781777359799932791422406747036732521968815625014879086413763430176553995836200414249661992641979244539430806997844496148630153608909459531753492957375146216230957, 10787321118195310240226631333145574112128363072784649462086624561163081871389421073413861210357303913712580951046440737963573625003750625925662293909992553809420130278297039256369542025919281383067159848455199544636463978178987749808048133404391014380905256389788359423687373372429937612628834775986730459449161471341927152007645151408249237179611571866490468151462974890730722996620859140041396820650675141825002726561138113676845895611537761065594396500537632376378521938364517180888382250132155490505421794974250266503304873219471310319738007147774005998980669395321073594444411378447161724158493364689030601972851, 25426636820517057729938634325842977308674981823270422145031794888206750726339396006426906847984274207683823378094066781239696224647530201588754507429874968835638884639658298697442011575870867897177500724919140567057239486014933406526962209805701599239187937738694021461544324943992889003162508797703374088147048116458009389407078795167855945176614502705340893795834835975987139666147842314331600970598469172700611406203950992545446704786096401333063176822813683140335643890951273616555702277231791826075347726662384270726606206331507696684878593486700065139210669146765121007098114763011600057568662148917982761487849, 12521803054045839347590960332440778206296459992268650117790080255195728153957844147777730100545714536967591261655950102336468697996889541731985317871283645702953802114928663500331417248451939295850247166847405715897132363973098484104681130843949732928564665316795983603284590864733491888950416190432249663867991541259940617141395244873467475000739442340916883560511342213681146951256026218919048323886106372814433392711686180645151394710091688872153325796657240408767473717799629259987558051404465892707594754517895375446626798437644339228969769393689376454196322854468428582905215850894189934669477438860701131569937]
c= [373669453125, 373669453125, 373669453125, 373669453125, 373669453125, 373669453125, 373669453125]

m = CRT(n, c)
m1 = iroot(m, e)  # 开e次方
print(m1)
